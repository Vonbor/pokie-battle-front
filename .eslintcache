[{"/Users/hellolidia/projects/pokie-battle-front/src/index.js":"1","/Users/hellolidia/projects/pokie-battle-front/src/App.js":"2","/Users/hellolidia/projects/pokie-battle-front/src/reportWebVitals.js":"3","/Users/hellolidia/projects/pokie-battle-front/src/Pokemon.js":"4","/Users/hellolidia/projects/pokie-battle-front/src/Details.js":"5","/Users/hellolidia/projects/pokie-battle-front/src/Info.js":"6","/Users/hellolidia/projects/pokie-battle-front/src/Fight.js":"7","/Users/hellolidia/projects/pokie-battle-front/src/Header.js":"8"},{"size":613,"mtime":1607081811110,"results":"9","hashOfConfig":"10"},{"size":904,"mtime":1607644247274,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606932665054,"results":"12","hashOfConfig":"10"},{"size":4025,"mtime":1607652071566,"results":"13","hashOfConfig":"10"},{"size":4810,"mtime":1607651628627,"results":"14","hashOfConfig":"10"},{"size":2280,"mtime":1607651526916,"results":"15","hashOfConfig":"10"},{"size":3448,"mtime":1607649652582,"results":"16","hashOfConfig":"10"},{"size":321,"mtime":1607652045364,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bouhfv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/hellolidia/projects/pokie-battle-front/src/index.js",[],["40","41"],"/Users/hellolidia/projects/pokie-battle-front/src/App.js",[],"/Users/hellolidia/projects/pokie-battle-front/src/reportWebVitals.js",[],"/Users/hellolidia/projects/pokie-battle-front/src/Pokemon.js",["42"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/fontawesome-free-solid';\nimport './Pokemon.css';\n\nexport default function Pokemon() {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        fetch('https://pokie-app.herokuapp.com/pokemon')\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n                console.log(res);\n            });\n    }, []);\n\n    const createPokeImage = (pokeID) => {\n        return `https://pokeres.bastionbot.org/images/pokemon/${pokeID}.png`;\n    };\n    if (data.length) {\n        return (\n            <div className=\"main\">\n                <div id=\"app\">\n                    {data.map((poki) => {\n                        return (\n                            <div class=\"poke-card\" id=\"{poki.name}\">\n                                <div class=\"flexy\">\n                                    <span class=\"card-id\">#{poki.id}</span>\n                                    <span class=\"card-hp\">\n                                        HP {poki.base.HP}\n                                        <i\n                                            id=\"poke-hp\"\n                                            class=\"fa fa-heart\"\n                                            aria-hidden=\"true\"\n                                        >\n                                            <FontAwesomeIcon icon={faHeart} />\n                                        </i>\n                                    </span>\n                                </div>\n                                <Link to={`/pokemon/${poki.id}`}>\n                                    <h1 class=\"card-name\">\n                                        {poki.name.english}\n                                    </h1>\n                                </Link>\n                                <img\n                                    class=\"card-image\"\n                                    src={createPokeImage(poki.id)}\n                                    alt={poki.name.english}\n                                />\n                                <span class=\"card-details\">\n                                    Type:{' '}\n                                    {poki.type.map((elem) => {\n                                        return (\n                                            <span className=\"pokiType\">\n                                                {elem}\n                                            </span>\n                                        );\n                                    })}\n                                </span>\n                                <span>\n                                    {Object.keys(poki.base).map((key) => {\n                                        return (\n                                            <span className=\"pokiBase\">\n                                                {key}: {poki.base[key]},\n                                            </span>\n                                        );\n                                    })}\n                                </span>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <p className=\"spinner\">\n                <img src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/73e61ecd-e2c8-4785-9ed3-d6ccd5d0826e/d51iqya-9f62b1eb-c6f8-4e29-bb06-3611ad6f6b2b.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvNzNlNjFlY2QtZTJjOC00Nzg1LTllZDMtZDZjY2Q1ZDA4MjZlXC9kNTFpcXlhLTlmNjJiMWViLWM2ZjgtNGUyOS1iYjA2LTM2MTFhZDZmNmIyYi5naWYifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.f807EmkHN1hE03g3DnDxLQsTtKDADkqd6nXfAbwfIy8\"></img>\n            </p>\n        );\n    }\n}\n\n/* <Link to={`${poki.id}`}><a class=\"btn\">Detail</a></Link> */\n","/Users/hellolidia/projects/pokie-battle-front/src/Details.js",["43"],"import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './Pokemon.css';\nimport './Info.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/fontawesome-free-solid';\n\nexport default function Details() {\n    const { id } = useParams({});\n    const createPokeImage = (pokeID) => {\n        return `https://pokeres.bastionbot.org/images/pokemon/${pokeID}.png`;\n    };\n\n    const [pokemon, setPokemon] = useState();\n    useEffect(() => {\n        fetch(`https://pokie-app.herokuapp.com/pokemon/${id}`)\n            .then((res) => res.json())\n            .then((res) => {\n                setPokemon(res);\n                console.log(res);\n            });\n    }, []);\n\n    if (pokemon) {\n        return (\n            <div className=\"main\">\n                <div>\n                    {pokemon.map((poke) => {\n                        return (\n                            <>\n                                <div id=\"app\">\n                                    <div class=\"poke-card\" id=\"{poke.name}\">\n                                        <div class=\"flexy\">\n                                            <span class=\"card-id\">\n                                                #{poke.id}\n                                            </span>\n                                            <span class=\"card-hp\">\n                                                HP {poke.base.HP}\n                                                <i\n                                                    id=\"poke-hp\"\n                                                    class=\"fa fa-heart\"\n                                                    aria-hidden=\"true\"\n                                                >\n                                                    <FontAwesomeIcon\n                                                        icon={faHeart}\n                                                    />\n                                                </i>\n                                            </span>\n                                        </div>\n                                        <Link to={`/pokemon/${poke.id}/name`}>\n                                            <h1 class=\"card-name\">\n                                                {poke.name.english}\n                                            </h1>\n                                        </Link>\n                                        <img\n                                            class=\"card-image\"\n                                            src={createPokeImage(poke.id)}\n                                            alt={poke.name.english}\n                                        />\n                                        <Link to={`/pokemon/${poke.id}/type`}>\n                                            <span class=\"card-details\">\n                                                Type:{' '}\n                                                {poke.type.map((elem) => {\n                                                    return (\n                                                        <span className=\"pokiType\">\n                                                            {elem}\n                                                        </span>\n                                                    );\n                                                })}\n                                            </span>\n                                        </Link>\n                                        <Link to={`/pokemon/${poke.id}/base`}>\n                                            <span>\n                                                {Object.keys(poke.base).map(\n                                                    (key) => {\n                                                        return (\n                                                            <span className=\"pokiBase\">\n                                                                {key}:{' '}\n                                                                {poke.base[key]}\n                                                                ,\n                                                            </span>\n                                                        );\n                                                    }\n                                                )}\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    } else {\n        return <p className=\"spinner\">LOADING...</p>;\n    }\n}\n","/Users/hellolidia/projects/pokie-battle-front/src/Info.js",["44"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Info.css';\nimport './Pokemon.css';\n\nexport default function Info() {\n    const { id, info } = useParams();\n\n    const [pokeInfo, setPokeInfo] = useState();\n    //const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(`https://pokie-app.herokuapp.com/pokemon/${id}/${info}`)\n            .then((res) => res.json())\n            .then((res) => {\n                setPokeInfo(res);\n                //setLoading(false);\n            });\n    }, []);\n\n    const renderPokemon = (poke) => {\n        if (info === 'name') {\n            return (\n                <div>\n                    <div className=\"wrap\">\n                        <span>English: {poke.english}</span>\n                        <span>French: {poke.french}</span>\n                        <span>Japanese: {poke.japanese}</span>\n                        <span>Chinese: {poke.chinese}</span>\n                    </div>\n                </div>\n            );\n        } else if (info === 'type') {\n            return (\n                <div>\n                    <div className=\"wrap\">\n                        <span>{poke.map((type) => ` ${type};`)}</span>\n                    </div>\n                </div>\n            );\n        } else if (info === 'base') {\n            return (\n                <div>\n                    <div className=\"wrap\">\n                        <div>\n                            <div>\n                                <span>{`HP: ${poke.HP}`}</span>\n                                <span>{`Attack: ${poke.Attack}`}</span>\n                                <span>{`Defense: ${poke.Defense}`}</span>\n                                <span>{`Sp. Attack: ${poke['Sp. Attack']}`}</span>\n                                <span>{`Sp. Defense: ${poke['Sp. Defense']}`}</span>\n                                <span>{`Speed: ${poke.Speed}`}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return <h1>Select name, base or type</h1>;\n        }\n    };\n\n    return (\n        <div>{pokeInfo ? renderPokemon(pokeInfo) : 'Error has happened'}</div>\n    );\n}\n",["45","46"],"/Users/hellolidia/projects/pokie-battle-front/src/Fight.js",["47"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './Pokemon.css';\nimport './Info.css';\nimport './App.css';\nimport './Fight.css';\n\nexport default function Fight() {\n    const [p1, setP1] = useState();\n    const [p2, setP2] = useState();\n\n    //set image\n    const createPokeImage = (pokeID) => {\n        return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokeID}.png`;\n    };\n\n    //get random pokemon\n    const getRandomPokeOne = Math.floor(Math.random() * 809);\n    const getRandomPokeTwo = Math.floor(Math.random() * 809);\n\n    function refreshPage() {\n        window.location.reload();\n    }\n\n    useEffect(() => {\n        fetch(`https://pokie-app.herokuapp.com/pokemon/${getRandomPokeOne}`)\n            .then((res) => res.json())\n            .then((res) => {\n                setP1(res[0]);\n                console.log(res[0]);\n            });\n        fetch(`https://pokie-app.herokuapp.com/pokemon/${getRandomPokeTwo}`)\n            .then((res) => res.json())\n            .then((res) => {\n                setP2(res[0]);\n                console.log(res[0]);\n            });\n    }, []);\n\n    function fight() {\n        let p = [p1, p2];\n        let attacking = p1.base.Speed > p2.base.Speed ? 0 : 1;\n        while (p1.base.HP > 0 && p2.base.HP > 0) {\n            var victim = attacking === 1 ? 0 : 1;\n            p[victim].base.HP -= p[attacking].base.Attack;\n            if (p[victim].base.HP <= 0) {\n                alert(`winner is ${p[attacking].name.english}`);\n            }\n        }\n    }\n\n    if (p1 && p2) {\n        console.log(`first pokemon is ${p1}, second pokemon is ${p2}`);\n        return (\n            <>\n                <div className=\"bg-fight\">\n                    <div className=\"fight-btn\">\n                        <button id=\"fight\" onClick={fight}></button>\n                        <button id=\"start-again\" onClick={refreshPage}>\n                            NEW GAME\n                        </button>\n                    </div>\n\n                    <div className=\"players-field\">\n                        <div class=\"player_one\">\n                            <h1 class=\"card-name\">{p1.name.english}</h1>\n                            <div class=\"card-hp\">HP - {p1.base.HP}</div>\n                            <div class=\"card-hp\">SPEED - {p1.base.Speed}</div>\n                            <div class=\"card-hp\">ATTACK - {p1.base.Attack}</div>\n                            <img\n                                class=\"card-img\"\n                                src={createPokeImage(p1.id)}\n                                alt={p1.name.english}\n                            />\n                        </div>\n                        <div class=\"player_two\">\n                            <h1 class=\"card-name\">{p2.name.english}</h1>\n                            <div class=\"card-hp\">HP - {p2.base.HP}</div>\n                            <div class=\"card-hp\">SPEED - {p2.base.Speed}</div>\n                            <div class=\"card-hp\">ATTACK - {p2.base.Attack}</div>\n                            <img\n                                class=\"card-img\"\n                                src={createPokeImage(p2.id)}\n                                alt={p2.name.english}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return <p className=\"spinner\">LOADING...</p>;\n    }\n}\n","/Users/hellolidia/projects/pokie-battle-front/src/Header.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":80,"column":17,"nodeType":"54","endLine":80,"endColumn":506},{"ruleId":"55","severity":1,"message":"56","line":24,"column":8,"nodeType":"57","endLine":24,"endColumn":10,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":20,"column":8,"nodeType":"57","endLine":20,"endColumn":10,"suggestions":"60"},{"ruleId":"48","replacedBy":"61"},{"ruleId":"50","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":38,"column":8,"nodeType":"57","endLine":38,"endColumn":10,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has missing dependencies: 'id' and 'info'. Either include them or remove the dependency array.",["68"],["65"],["66"],"React Hook useEffect has missing dependencies: 'getRandomPokeOne' and 'getRandomPokeTwo'. Either include them or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [id]",{"range":"76","text":"77"},"Update the dependencies array to be: [id, info]",{"range":"78","text":"79"},"Update the dependencies array to be: [getRandomPokeOne, getRandomPokeTwo]",{"range":"80","text":"81"},[806,808],"[id]",[592,594],"[id, info]",[1145,1147],"[getRandomPokeOne, getRandomPokeTwo]"]